---
- name: Bootstrap remote hosts with a dedicated control user
  hosts: bootstrap
  become: yes

  vars:
    # derive a filesystem‐safe key‐basename from the hostname
    keybase: "{{ inventory_hostname | replace('-', '_') }}_ansible"
    bootstrap_public_key: "{{ lookup('env','HOME') + '/.ssh/' + keybase + '.pub' }}"
    bootstrap_user: ansible
    bootstrap_group: ansible
    bootstrap_shell: /bin/bash
    ssh_dir: "/home/{{ bootstrap_user }}/.ssh"

  tasks:
    - name: Ensure group '{{ bootstrap_group }}' exists
      ansible.builtin.group:
        name: "{{ bootstrap_group }}"
        state: present

    - name: Create user '{{ bootstrap_user }}'
      ansible.builtin.user:
        name: "{{ bootstrap_user }}"
        group: "{{ bootstrap_group }}"
        shell: "{{ bootstrap_shell }}"
        create_home: yes

    - name: Ensure {{ ssh_dir }} is present
      ansible.builtin.file:
        path: "{{ ssh_dir }}"
        state: directory
        owner: "{{ bootstrap_user }}"
        group: "{{ bootstrap_group }}"
        mode: '0700'

    - name: Install public key for '{{ bootstrap_user }}'
      ansible.posix.authorized_key:
        user: "{{ bootstrap_user }}"
        key: "{{ lookup('file', bootstrap_public_key) }}"
        state: present

    - name: Grant '{{ bootstrap_user }}' passwordless sudo
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ bootstrap_user }}"
        content: "{{ bootstrap_user }} ALL=(ALL) NOPASSWD:ALL"
        mode: '0440'
