# ... (previous sections of the playbook) ...

vars:
  java_package_name: openjdk-17-jdk
  app_user: configsrv
  app_group: configsrv
  app_dir: /opt/spring-boot-config-server
  app_jar_name: "my-config-server.jar"
  app_port: 8888
  node_exporter_version: "1.7.0"
  node_exporter_user: node_exporter
  node_exporter_group: node_exporter
  node_exporter_port: 9100
  node_exporter_download_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
  # node_exporter_checksum: "sha256:c03905950a38cb2dc3006110276407eda005f8501909099933a288f00ac88921" # REMOVED/COMMENTED OUT

  jenkins_deployer_user: yensid_deployer
  jenkins_deployer_group: yensid_deployer
  jenkins_yensid_deployer_ssh_public_key_content: |
    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIK202otrg4n8M8kN5iFIrrfeDPbK3bEOtb9b5WNjIbeC jenkins_yensid_deployer@yensid
    
    # ... (tasks before Node Exporter setup) ...

    # Section 2: Prometheus Node Exporter Setup
    - name: Create group for Node Exporter
      ansible.builtin.group:
        name: "{{ node_exporter_group }}"
        state: present

    - name: Create user for Node Exporter
      ansible.builtin.user:
        name: "{{ node_exporter_user }}"
        group: "{{ node_exporter_group }}"
        shell: /bin/false
        create_home: false
        system: yes
        state: present

    - name: Create temporary directory for Node Exporter download
      ansible.builtin.file:
        path: /tmp/node_exporter_download
        state: directory
        mode: '0755'

    - name: Download Node Exporter archive (without checksum)
      ansible.builtin.get_url:
        url: "{{ node_exporter_download_url }}"
        dest: "/tmp/node_exporter_download/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        # checksum: "{{ node_exporter_checksum }}"  # CHECKSUM PARAMETER REMOVED
        mode: '0644'
        # You might want to add 'force: yes' if you want to ensure it always re-downloads,
        # but without 'creates' on this task, it will re-download if the dest file doesn't exist.

    - name: Unarchive Node Exporter
      ansible.builtin.unarchive:
        src: "/tmp/node_exporter_download/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp/ # Extracts to /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/
        remote_src: yes
        creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter" # Avoid re-unarchiving

    - name: Copy Node Exporter binary to /usr/local/bin
      ansible.builtin.copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        owner: root
        group: root
        mode: '0755'
        remote_src: yes
      notify: Restart node_exporter

    - name: Template Node Exporter systemd service file
      ansible.builtin.template:
        src: ../templates/node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: '0644'
      notify: Reload systemd and restart node_exporter

    - name: Ensure Node Exporter service is enabled and started
      ansible.builtin.systemd:
        name: node_exporter
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Clean up Node Exporter downloaded archive and temp directory
      ansible.builtin.file:
        path: /tmp/node_exporter_download
        state: absent
      when: true

    - name: Clean up Node Exporter extracted folder
      ansible.builtin.file:
        path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
        state: absent
      when: true

# ... (rest of the playbook) ...
