# ... (previous tasks) ...

- name: Create temporary directory for Node Exporter download
  ansible.builtin.file:
    path: /tmp/node_exporter_download
    state: directory
    mode: '0755'

- name: Download Node Exporter archive
  ansible.builtin.get_url:
    url: "{{ node_exporter_download_url }}"
    dest: "/tmp/node_exporter_download/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    checksum: "{{ node_exporter_checksum }}" # e.g., sha256:actual_checksum_value
    mode: '0644'
  # This task will fail if the checksum doesn't match.

- name: Unarchive Node Exporter
  ansible.builtin.unarchive:
    src: "/tmp/node_exporter_download/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /tmp/ # Extracts to /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/
    remote_src: yes # Indicates that src is on the remote machine
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter" # Avoid re-unarchiving

- name: Copy Node Exporter binary to /usr/local/bin
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: /usr/local/bin/node_exporter
    owner: root
    group: root
    mode: '0755'
    remote_src: yes
  notify: Restart node_exporter

# Clean up the specific downloaded archive, not just the extracted folder
- name: Clean up Node Exporter downloaded archive and temp directory
  ansible.builtin.file:
    path: /tmp/node_exporter_download
    state: absent
  when: true # Always try to cleanup

# ... (rest of the tasks for Node Exporter service, etc.) ...
